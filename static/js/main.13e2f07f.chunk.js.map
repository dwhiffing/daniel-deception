{"version":3,"sources":["components/index.js","components/Actions.js","components/Card.js","components/Seat.js","components/Room.js","components/Lobby.js","App.js","index.js"],"names":["Flex","variant","flex","children","style","passedStyles","props","display","test","flexDirection","justifyContent","alignItems","Box","Actions","room","players","phaseIndex","selectedMeans","crime","selectedClue","player","find","p","id","sessionId","sendAction","action","rest","send","zIndex","borderTop","backgroundColor","padding","minHeight","position","bottom","left","right","isAdmin","disabled","filter","role","length","onClick","means","clue","hasBadge","Action","Button","margin","Card","selected","borderRadius","boxSizing","border","Typography","fontWeight","textAlign","color","Seat","showSetScientistButton","currentPlayer","setSelectedClue","setSelectedMeans","clues","isClient","index","name","canSelect","opacity","COLORS","map","key","playerId","Room","scene","phaseTimer","useState","scientist","scientistLabel","useEffect","paddingTop","paddingBottom","align","s","o","Header","borderBottom","top","minWidth","PHASES","Scene","flexWrap","item","markedValueIndex","n","type","width","values","value","Seats","saveRoom","localStorage","setItem","joinRoomWithReconnect","roomId","a","getItem","window","colyseus","reconnect","joinById","Lobby","setRoom","availableRooms","setAvailableRooms","faker","firstName","setName","intervalRef","useRef","autoConnectAttempted","createRoom","useCallback","roomName","prompt","create","joinRoom","alert","getAvailableRooms","rooms","current","setInterval","clearInterval","lastRoom","height","TextField","placeholder","onChange","e","truncate","target","omission","marginBottom","RoomListItem","cursor","textDecoration","metadata","EmptyState","App","setPlayers","setPhaseIndex","roundsLeft","setRoundsLeft","setPhaseTimer","setScene","setCrime","onLeave","state","changes","forEach","field","toJSON","console","log","slice","Client","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAO,SAAC,GAMd,IALLC,EAKI,EALJA,QAKI,IAJJC,YAII,MAJG,EAIH,EAHJC,EAGI,EAHJA,SAGI,IAFJC,MAAOC,OAEH,MAFkB,GAElB,EADDC,EACC,qDACAF,EAAQ,CAAEG,QAAS,OAAQL,QAmB/B,MAjBI,SAASM,KAAKP,KAChBG,EAAMK,cAAgB,UAGpB,kBAAkBD,KAAKP,KACzBG,EAAMM,eAAiB,iBAGrB,eAAeF,KAAKP,GACtBG,EAAMO,WAAa,SACV,iBAAiBH,KAAKP,GAC/BG,EAAMM,eAAiB,SACd,SAASF,KAAKP,KACvBG,EAAMM,eAAiB,SACvBN,EAAMO,WAAa,UAInB,kBAACC,EAAA,EAAD,eAAKR,MAAK,eAAOA,EAAP,GAAiBC,IAAoBC,GAC5CH,I,UC3BA,SAASU,EAAT,GAOH,IANFC,EAMC,EANDA,KACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,MACAC,EACC,EADDA,aAEMC,EAASL,EAAQM,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOT,EAAKU,cAAc,GACzDC,EAAa,SAACC,GAAD,IAASC,EAAT,uDAAgB,GAAhB,OAAuBb,EAAKc,KAAL,aAAYF,UAAWC,KAEjE,OACE,kBAAC,EAAD,CACEzB,KAAM,EACND,QAAQ,SACR4B,OAAQ,IACRzB,MAAO,CACL0B,UAAW,iBACXC,gBAAiB,QACjBC,QAAS,GACTC,UAAW,GACXC,SAAU,QACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,IAGRjB,EAAOkB,UAA2B,IAAhBtB,GACjB,kBAAC,EAAD,CACEuB,SAAyD,IAA/CxB,EAAQyB,QAAO,SAAClB,GAAD,OAAkB,IAAXA,EAAEmB,QAAYC,OAC9CC,QAAS,kBAAMlB,EAAW,UAF5B,QAQc,IAAfT,IACkB,IAAhBI,EAAOqB,KACN,kBAAC,EAAD,CAAMxC,QAAQ,mBACTgB,IAAkBE,IACnB,yGAKDF,GAAiBE,GAChB,6DACkCF,EADlC,oBACkE,IAC/DE,EAFH,iBAKF,kBAAC,EAAD,CACEoB,UAAWtB,IAAkBE,EAC7BwB,QAAS,WACPlB,EAAW,SAAU,CACnBmB,MAAO3B,EACP4B,KAAM1B,MALZ,kBAaF,iEAGY,IAAfH,IACkB,IAAhBI,EAAOqB,KACN,sEAC2CvB,EAAM,GADjD,gBACkE,IAC/DA,EAAM,IAGT,uEAGY,IAAfF,GACC,oCACE,oLAKCI,EAAO0B,UACN,kBAAC,EAAD,CAAM7C,QAAQ,iBACZ,kBAAC,EAAD,CACEsC,UAAWtB,IAAkBE,EAC7BwB,QAAS,WACPlB,EAAW,SAAU,CACnBmB,MAAO3B,EACP4B,KAAM1B,MALZ,aAmBd,IAAM4B,EAAS,SAAC,GAAD,QAAG9C,eAAH,MAAa,YAAb,EAA6BK,EAA7B,kCACb,kBAAC0C,EAAA,EAAD,eAAQ/C,QAASA,GAAaK,EAA9B,CAAqCF,MAAO,CAAE6C,OAAQ,OC1G3CC,EAAO,SAAC,GAAD,IAClB/C,EADkB,EAClBA,SACAgD,EAFkB,EAElBA,SACApB,EAHkB,EAGlBA,gBACAY,EAJkB,EAIlBA,QAJkB,IAKlBvC,aALkB,MAKV,GALU,SAOlB,kBAAC,EAAD,CACEH,QAAQ,SACR0C,QAASA,EACTvC,MAAK,eACAA,EADA,CAEH6C,OAAQ,EACRjB,QAAS,GACToB,aAAc,EACdC,UAAW,YACXC,OAAQH,EAAW,kBAAoB,KACvCpB,qBAGF,kBAACwB,EAAA,EAAD,CACEnD,MAAO,CAAEoD,WAAY,OAAQC,UAAW,SAAUC,MAAO,UAExDvD,KCtBMwD,EAAO,SAAC,GAWd,IAVLC,EAUI,EAVJA,uBACAnC,EASI,EATJA,WACAL,EAQI,EARJA,OACAyC,EAOI,EAPJA,cACA7C,EAMI,EANJA,WACAG,EAKI,EALJA,aACA2C,EAII,EAJJA,gBACA7C,EAGI,EAHJA,cACA8C,EAEI,EAFJA,iBAEI,IADJ3D,aACI,MADI,GACJ,EACImB,EAAkDH,EAAlDG,GAAIyC,EAA8C5C,EAA9C4C,MAAOvB,EAAuCrB,EAAvCqB,KAAMG,EAAiCxB,EAAjCwB,MAAOqB,EAA0B7C,EAA1B6C,SAAUC,EAAgB9C,EAAhB8C,MAAOC,EAAS/C,EAAT+C,KAE3CC,EACY,IAAfpD,GACwB,IAAvB6C,EAAcpB,MACdrB,EAAOG,KAAOsC,EAActC,IACd,IAAfP,GAAoBO,IAAOsC,EAActC,IAA6B,IAAvBsC,EAAcpB,KAE1D4B,EAAUD,EAAY,KAAO,KAEnC,OAAO7C,EACL,kBAAC,EAAD,CACEtB,QAAQ,SACRG,MAAK,aACHkD,OAAO,aAAD,OAAegB,EAAOJ,IAC5BjB,OAAQ,GACRjB,QAAS,IACN5B,IAGL,kBAACmD,EAAA,EAAD,CAAYtD,QAASgE,EAAW,KAAO,SACpCA,EAAQ,eAAWE,GAAQ5C,EAAnB,KAA2B4C,GAAQ5C,GAG9C,kBAAC,EAAD,CAAMtB,QAAQ,mBACX2C,EAAM2B,KAAI,SAAC3B,EAAOsB,GAAR,OACT,kBAAC,EAAD,CACEnC,gBAAe,iBAAYsC,GAC3BlB,SAAUlC,IAAkB2B,EAC5B4B,IAAG,gBAAWN,GACdvB,QAAS,kBAAMyB,GAAaL,EAAiBnB,KAE5CA,OAKP,kBAAC,EAAD,CAAM3C,QAAQ,mBACX+D,EAAMO,KAAI,SAAC1B,EAAMqB,GAAP,OACT,kBAAC,EAAD,CACEnC,gBAAe,iBAAYsC,GAC3BG,IAAG,eAAUN,GACbf,SAAUhC,IAAiB0B,EAC3BF,QAAS,kBAAMyB,GAAaN,EAAgBjB,KAE3CA,OAKNe,GAAmC,IAATnB,GACzB,kBAACO,EAAA,EAAD,CACE/C,QAAQ,YACR0C,QAAS,kBAAMlB,EAAW,eAAgB,CAAEgD,SAAUrD,EAAOG,OAF/D,8BAYF,MAGA+C,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCjFK,SAASI,EAAT,GAAwE,IAAxD3D,EAAuD,EAAvDA,QAASG,EAA8C,EAA9CA,MAAOyD,EAAuC,EAAvCA,MAAO7D,EAAgC,EAAhCA,KAAME,EAA0B,EAA1BA,WAAY4D,EAAc,EAAdA,WAAc,EAClCC,qBADkC,mBACrE5D,EADqE,KACtD8C,EADsD,OAEpCc,qBAFoC,mBAErE1D,EAFqE,KAEvD2C,EAFuD,KAGtED,EAAgB9C,EAAQM,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOT,EAAKU,cAAc,GAClEsD,EAAY/D,EAAQM,MAAK,SAACC,GAAD,OAAkB,IAAXA,EAAEmB,QAClCsC,EAAiBD,EAAYA,EAAUX,KAAO,OACnCpD,EAAQM,MAAK,SAACC,GAAD,OAAkB,IAAXA,EAAEmB,QAErCuC,qBAAU,WACRjB,IACAD,MACC,CAAC9C,IAEA8D,IAAcjB,IAAekB,EAAc,eAAWD,EAAUX,KAArB,MAE/C,IAAM1C,EAAa,SAACC,GAAD,IAASC,EAAT,uDAAgB,GAAhB,OAAuBb,EAAKc,KAAL,aAAYF,UAAWC,KACjE,OACE,kBAAC,EAAD,CAAM1B,QAAQ,SAASG,MAAO,CAAE6E,WAAY,GAAIC,cAAe,MAC7D,kBAAC,EAAD,CAAQlE,WAAYA,EAAY4D,WAAYA,IAE5C,kBAAC,EAAD,CAAM3E,QAAQ,WACK,IAAfe,GAAmC,IAAfA,IACpB,kBAAC,EAAD,CAAOI,OAAQyC,EAAec,MAAOA,EAAOlD,WAAYA,IAG1D,kBAAC8B,EAAA,EAAD,CAAY4B,MAAM,UAAlB,uBACuBJ,IAGN,IAAf/D,IACgB,IAAhBA,GACgB,IAAfA,GAA2C,IAAvB6C,EAAcpB,MACnB,IAAfzB,GAA2C,IAAvB6C,EAAcpB,OACnC,kBAAC,EAAD,CACEmB,uBAAwBC,EAAcvB,UAA2B,IAAhBtB,EACjDS,WAAYA,EACZoC,cAAeA,EACf5C,cAAeA,EACfE,aAAcA,EACdH,WAAYA,EACZ+C,iBAAkB,SAACqB,GAAD,OAChBrB,GAAiB,SAACsB,GAAD,OAAQA,IAAMD,EAAI,KAAOA,MAE5CtB,gBAAiB,SAACsB,GAAD,OACftB,GAAgB,SAACuB,GAAD,OAAQA,IAAMD,EAAI,KAAOA,MAE3CrE,QAASA,EACNwD,KAAI,SAACjD,EAAG4C,GAAJ,sBACA5C,EADA,CAEH4C,QACAD,SAAU3C,EAAEC,KAAOT,EAAKU,eAEzBgB,QAAO,SAAClB,GAAD,OAAkB,IAAXA,EAAEmB,WAKzB,kBAAC5B,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTG,MAAOA,EACPF,WAAYA,EACZC,cAAeA,EACfE,aAAcA,KAMtB,IAAMmE,EAAS,SAAC,GAAD,IAAGtE,EAAH,EAAGA,WAAY4D,EAAf,EAAeA,WAAf,OACb,kBAAC,EAAD,CACE1E,KAAM,EACND,QAAQ,sBACRG,MAAO,CACL4B,QAAS,GACTuD,aAAc,iBACdrD,SAAU,QACVsD,IAAK,EACLpD,KAAM,EACNC,MAAO,EACPN,gBAAiB,UAGnB,0BAAM3B,MAAO,CAAEqF,SAAU,KAAzB,aACA,0BAAMrF,MAAO,CAAEqF,SAAU,KAAOC,EAAO1E,EAAa,IACpD,0BAAMZ,MAAO,CAAEqF,SAAU,KAAOb,KAI9Be,EAAQ,SAACrF,GAAD,OACZ,kBAAC,EAAD,CAAML,QAAQ,yBAAyBG,MAAO,CAAEwF,SAAU,SACvDtF,EAAMqE,MACJnC,QAAO,SAACqD,GAAD,OAAgC,IAAtBvF,EAAMc,OAAOqB,MAAcoD,EAAKC,kBAAoB,KACrEvB,KAAI,SAACsB,EAAME,GAAP,OACH,kBAAC,EAAD,CACE9F,QAAQ,sBACRuE,IAAG,gBAAWuB,GACd3F,MAAO,CAAE6C,OAAQ,IAEjB,kBAACM,EAAA,EAAD,CAAYtD,QAAQ,KAAKkF,MAAM,UAC5BU,EAAKG,MAER,kBAAC,EAAD,CAAM5F,MAAO,CAAE6F,MAAO,OAAQL,SAAU,SACrCC,EAAKK,OAAO3B,KAAI,SAAC4B,EAAOJ,GAAR,OACf,kBAAC,EAAD,CAAM9F,QAAQ,SAASuE,IAAG,gBAAWuB,IACnC,kBAAC,EAAD,CACEhE,gBACE8D,EAAKC,mBAAqBC,EAAI,UAAY,OAE5C3F,MAAO,CAAEqF,SAAU,KACnB9C,QAAS,kBACPrC,EAAMmB,WAAW,YAAa,CAAEuE,KAAMH,EAAKG,KAAMG,YAGlDA,cAUbC,EAAQ,SAAC,GAAD,IAAGrF,EAAH,EAAGA,QAAYT,EAAf,kCACZ,kBAAC,EAAD,CAAMJ,KAAM,EAAGD,QAAQ,UACpBc,EAAQwD,KAAI,SAACnD,EAAQ2E,GAAT,OACX,kBAAC,EAAD,eAAMvB,IAAG,eAAUpD,EAAO8C,OAAS9C,OAAQA,GAAYd,SAKvDoF,EAAS,CACb,WACA,eACA,iBACA,sB,qEC9IIW,EAAW,SAACvF,EAAMqD,GACtBmC,aAAaC,QAAQ,OAAQpC,GAC7BmC,aAAaC,QAAQzF,EAAKS,GAAIT,EAAKU,YAG/BgF,EAAqB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,2DAE1BlF,EAAY8E,aAAaK,QAAQF,IAFP,0CAMXG,OAAOC,SAASC,UAAUL,EAAQjF,GANvB,OAMxBV,EANwB,uEAUrBA,EAVqB,uCAUN8F,OAAOC,SAASE,SAASN,GAVnB,mCAU5B3F,EAV4B,uBAYrBA,GAZqB,yDAAH,sDAiBpB,SAASkG,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QAAW,EACWpC,mBAAS,IADpB,mBAC1BqC,EAD0B,KACVC,EADU,OAETtC,mBACtByB,aAAaK,QAAQ,SAAWS,IAAMjD,KAAKkD,aAHZ,mBAE1BlD,EAF0B,KAEpBmD,EAFoB,KAK3BC,EAAcC,mBACdC,EAAuBD,kBAAO,GAE9BE,EAAaC,sBAAW,uCAC5B,WAAOxD,GAAP,iBAAAuC,EAAA,yDACQkB,EAAWC,OAAO,cAD1B,iEAIqBjB,OAAOC,SAASiB,OAAO,YAAa,CAAEF,aAJ3D,OAIQ9G,EAJR,OAKEuF,EAASvF,EAAMqD,GACfrD,EAAKc,KAAK,CAAEF,OAAQ,UAAWyC,SAC/BrD,EAAKc,KAAK,CAAEF,OAAQ,QACpBuF,EAAQnG,GARV,4CAD4B,sDAW5B,CAACmG,IAGGc,EAAWJ,sBAAW,uCAC1B,WAAOlB,EAAQtC,GAAf,eAAAuC,EAAA,sEACqBF,EAAsBC,GAD3C,UACQ3F,EADR,8BAGIkH,MAAM,uBAHV,0BAME3B,EAASvF,EAAMqD,GACfrD,EAAKc,KAAK,CAAEF,OAAQ,UAAWyC,SAC/BrD,EAAKc,KAAK,CAAEF,OAAQ,QACpBuF,EAAQnG,GATV,4CAD0B,wDAY1B,CAACmG,IAGGgB,EAAoBN,sBAAW,sBAAC,4BAAAjB,EAAA,sEAChBE,OAAOC,SAASoB,oBADA,OAC9BC,EAD8B,OAEpCf,EAAkBe,GAFkB,2CAGnC,IAqBH,OAnBAlD,qBAAU,WAGR,OAFAiD,IACAV,EAAYY,QAAUC,YAAYH,EAAmB,KAC9C,kBAAMI,cAAcd,EAAYY,YACtC,CAACF,IAEJjD,qBAAU,WACR,GAAIkC,EAAgB,CAClB,IAAMoB,EAAWpB,EAAe7F,MAAK,SAACP,GAAD,OACnCwF,aAAaK,QAAQ7F,EAAK2F,WAGT6B,IAAab,EAAqBU,UACnDV,EAAqBU,SAAU,EAC/BJ,EAASO,EAAS7B,OAAQtC,OAG7B,CAAC+C,EAAgBa,EAAU5D,IAG5B,kBAAC,EAAD,CAAMlE,QAAQ,gBAAgBG,MAAO,CAAEmI,OAAQ,UAC7C,kBAACC,EAAA,EAAD,CACEC,YAAY,aACZtC,MAAOhC,EACPuE,SAAU,SAACC,GAAD,OACRrB,EAAQsB,IAASD,EAAEE,OAAO1C,MAAO,CAAEzD,OAAQ,GAAIoG,SAAU,OAE3D1I,MAAO,CAAE2I,aAAc,MAGzB,kBAACxF,EAAA,EAAD,CAAYtD,QAAQ,MAApB,qBAEA,kBAAC,EAAD,CAAMC,KAAM,EAAGD,QAAQ,gBAAgBG,MAAO,CAAE6B,UAAW,MAC9B,IAA1BiF,EAAexE,QAAgB,kBAAC,EAAD,MAE/BwE,EAAe3C,KAAI,SAACzD,GAAD,OAClB,kBAAC,EAAD,CACE0D,IAAK1D,EAAK2F,OACV3F,KAAMA,EACN6B,QAAS,kBAAMoF,EAASjH,EAAK2F,OAAQtC,UAK3C,kBAACnB,EAAA,EAAD,CAAQ/C,QAAQ,YAAY0C,QAAS,kBAAM+E,EAAWvD,KAAtD,gBAON,IAAM6E,EAAe,SAAC,GAAD,IAAGlI,EAAH,EAAGA,KAAM6B,EAAT,EAASA,QAAT,OACnB,kBAAC/B,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CACEnD,MAAO,CAAE6I,OAAQ,UAAWC,eAAgB,aAC5CvG,QAASA,GAER7B,EAAKqI,SAASvB,UAAY9G,EAAK2F,UAKhC2C,EAAa,kBAAM,kBAAC7F,EAAA,EAAD,4BCnEV8F,MA5Df,WAAgB,IAAD,EACWxE,qBADX,mBACN/D,EADM,KACAmG,EADA,OAEiBpC,mBAAS,IAF1B,mBAEN9D,EAFM,KAEGuI,EAFH,OAGuBzE,oBAAU,GAHjC,mBAGN7D,EAHM,KAGMuI,EAHN,OAIuB1E,mBAAS,GAJhC,mBAIN2E,EAJM,KAIMC,EAJN,OAKuB5E,oBAAU,GALjC,mBAKND,EALM,KAKM8E,EALN,OAMa7E,mBAAS,IANtB,mBAMNF,EANM,KAMCgF,EAND,OAOa9E,mBAAS,IAPtB,mBAON3D,EAPM,KAOC0I,EAPD,KA0Cb,OAjCA5E,qBAAU,WACHlE,IAELA,EAAK+I,SAAQ,WACX5C,EAAQ,MACRqC,EAAW,IACXC,GAAe,GACfE,EAAc,GACdE,EAAS,OAGX7I,EAAKgJ,MAAMpB,SAAW,SAACqB,GAAD,OACpBA,EAAQC,SAAQ,YAAuB,IAApBC,EAAmB,EAAnBA,MAAO9D,EAAY,EAAZA,MACV,YAAV8D,EACFX,EAAWnD,EAAM+D,UACE,gBAAVD,EACTN,EAASxD,EAAM+D,UACI,gBAAVD,EACTL,EAASzD,EAAM+D,UACI,eAAVD,EACTV,EAAcpD,GACK,eAAV8D,EACTR,EAActD,GACK,eAAV8D,EACTP,EAAcvD,GACK,YAAV8D,GACT9D,GAAS6B,MAAM7B,UAGpB,CAACrF,IAEJqJ,QAAQC,IAAI,CAAErJ,UAAS4D,QAAO3D,aAAY4D,aAAY1D,UAGpD,kBAAC,EAAD,CAAMjB,QAAQ,UACXa,EACC,kBAAC4D,EAAD,CACE5D,KAAMA,EACNC,QAASA,EACT4D,MAAOA,EAAM0F,MAAM,EAAG1F,EAAMjC,OAAS8G,GACrC5E,WAAYA,EACZ5D,WAAYA,EACZE,MAAOA,IAGT,kBAAC8F,EAAD,CAAOC,QAASA,M,QCtDxBL,OAAOC,SAAW,IAAIyD,SAEhB,wCAINC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.13e2f07f.chunk.js","sourcesContent":["import React from 'react'\nimport { Box } from '@material-ui/core'\n\nexport const Flex = ({\n  variant,\n  flex = 1,\n  children,\n  style: passedStyles = {},\n  ...props\n}) => {\n  let style = { display: 'flex', flex }\n\n  if (/column/.test(variant)) {\n    style.flexDirection = 'column'\n  }\n\n  if (/justify-between/.test(variant)) {\n    style.justifyContent = 'space-between'\n  }\n\n  if (/align-center/.test(variant)) {\n    style.alignItems = 'center'\n  } else if (/justify-center/.test(variant)) {\n    style.justifyContent = 'center'\n  } else if (/center/.test(variant)) {\n    style.justifyContent = 'center'\n    style.alignItems = 'center'\n  }\n\n  return (\n    <Box style={{ ...style, ...passedStyles }} {...props}>\n      {children}\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, Checkbox, FormControlLabel } from '@material-ui/core'\nimport { Flex } from './'\n\nexport function Actions({\n  room,\n  players,\n  phaseIndex,\n  selectedMeans,\n  crime,\n  selectedClue,\n}) {\n  const player = players.find((p) => p.id === room.sessionId) || {}\n  const sendAction = (action, rest = {}) => room.send({ action, ...rest })\n\n  return (\n    <Flex\n      flex={0}\n      variant=\"center\"\n      zIndex={100}\n      style={{\n        borderTop: '1px solid gray',\n        backgroundColor: 'white',\n        padding: 10,\n        minHeight: 50,\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n      }}\n    >\n      {player.isAdmin && phaseIndex === -1 && (\n        <Action\n          disabled={players.filter((p) => p.role === 1).length === 0}\n          onClick={() => sendAction('deal')}\n        >\n          Deal\n        </Action>\n      )}\n\n      {phaseIndex === 0 &&\n        (player.role === 2 ? (\n          <Flex variant=\"column center\">\n            {(!selectedMeans || !selectedClue) && (\n              <p>\n                Select one of your Red Means cards and Blue Clue cards to plan\n                the murder.\n              </p>\n            )}\n            {selectedMeans && selectedClue && (\n              <p>\n                You will kill the victim using {selectedMeans} and leave behind{' '}\n                {selectedClue} as evidence.\n              </p>\n            )}\n            <Action\n              disabled={!selectedMeans || !selectedClue}\n              onClick={() => {\n                sendAction('murder', {\n                  means: selectedMeans,\n                  clue: selectedClue,\n                })\n              }}\n            >\n              Commit Murder\n            </Action>\n          </Flex>\n        ) : (\n          <p>The murder is currently happening</p>\n        ))}\n\n      {phaseIndex === 1 &&\n        (player.role === 1 ? (\n          <p>\n            Mark the crime scene based on the means {crime[1]} and the clue{' '}\n            {crime[0]}\n          </p>\n        ) : (\n          <p>The Forensic Scientist is investigating</p>\n        ))}\n\n      {phaseIndex === 2 && (\n        <>\n          <p>\n            Discuss the clues given by Forensics to determine the murderer, and\n            via which means (Red) and key evidence (Blue). You only get one\n            chance to accuse!\n          </p>\n          {player.hasBadge && (\n            <Flex variant=\"column center\">\n              <Action\n                disabled={!selectedMeans || !selectedClue}\n                onClick={() => {\n                  sendAction('accuse', {\n                    means: selectedMeans,\n                    clue: selectedClue,\n                  })\n                }}\n              >\n                Accuse\n              </Action>\n            </Flex>\n          )}\n        </>\n      )}\n    </Flex>\n  )\n}\n\nconst Action = ({ variant = 'contained', ...props }) => (\n  <Button variant={variant} {...props} style={{ margin: 8 }} />\n)\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { Flex } from '.'\n\nexport const Card = ({\n  children,\n  selected,\n  backgroundColor,\n  onClick,\n  style = {},\n}) => (\n  <Flex\n    variant=\"center\"\n    onClick={onClick}\n    style={{\n      ...style,\n      margin: 2,\n      padding: 10,\n      borderRadius: 8,\n      boxSizing: 'borderBox',\n      border: selected ? '4px solid black' : null,\n      backgroundColor,\n    }}\n  >\n    <Typography\n      style={{ fontWeight: 'bold', textAlign: 'center', color: 'white' }}\n    >\n      {children}\n    </Typography>\n  </Flex>\n)\n","import React from 'react'\nimport { Button, Typography } from '@material-ui/core'\nimport { Flex } from '.'\nimport { Card } from './Card'\n\nexport const Seat = ({\n  showSetScientistButton,\n  sendAction,\n  player,\n  currentPlayer,\n  phaseIndex,\n  selectedClue,\n  setSelectedClue,\n  selectedMeans,\n  setSelectedMeans,\n  style = {},\n}) => {\n  const { id, clues, role, means, isClient, index, name } = player\n\n  const canSelect =\n    (phaseIndex === 0 &&\n      currentPlayer.role === 2 &&\n      player.id === currentPlayer.id) ||\n    (phaseIndex === 2 && id !== currentPlayer.id && currentPlayer.role !== 1)\n\n  const opacity = canSelect ? 'FF' : '55'\n\n  return id ? (\n    <Flex\n      variant=\"column\"\n      style={{\n        border: `5px solid ${COLORS[index]}`,\n        margin: 10,\n        padding: 10,\n        ...style,\n      }}\n    >\n      <Typography variant={isClient ? 'h5' : 'body1'}>\n        {isClient ? `You (${name || id})` : name || id}\n      </Typography>\n\n      <Flex variant=\"justify-between\">\n        {means.map((means, index) => (\n          <Card\n            backgroundColor={`#D33830${opacity}`}\n            selected={selectedMeans === means}\n            key={`means-${index}`}\n            onClick={() => canSelect && setSelectedMeans(means)}\n          >\n            {means}\n          </Card>\n        ))}\n      </Flex>\n\n      <Flex variant=\"justify-between\">\n        {clues.map((clue, index) => (\n          <Card\n            backgroundColor={`#0071AA${opacity}`}\n            key={`clue-${index}`}\n            selected={selectedClue === clue}\n            onClick={() => canSelect && setSelectedClue(clue)}\n          >\n            {clue}\n          </Card>\n        ))}\n      </Flex>\n\n      {showSetScientistButton && role !== 1 && (\n        <Button\n          variant=\"contained\"\n          onClick={() => sendAction('setScientist', { playerId: player.id })}\n        >\n          Assign Forensic Scientist\n        </Button>\n      )}\n\n      {/* <TimeChip\n              time={!connected ? remainingConnectionTime : remainingMoveTime}\n            /> */}\n    </Flex>\n  ) : null\n}\n\nconst COLORS = [\n  '#0071AA',\n  '#ECE4B7',\n  '#E8C340',\n  '#D33830',\n  '#A06033',\n  '#EA9438',\n  '#E27C81',\n  '#7FC12E',\n  '#525252',\n  '#AA5BAF',\n]\n","import { Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { Flex } from '.'\nimport { Actions } from './Actions'\nimport { Card } from './Card'\nimport { Seat } from './Seat'\n\n// TODO: Ensure that evidence phases have extra cards drawn\n// TODO: Hide players for scientist when marking evidence\n// TODO: Send evidence marking over server with player color?\n// TODO: Ensure all secrets are removed\n\nexport function Room({ players, crime, scene, room, phaseIndex, phaseTimer }) {\n  const [selectedMeans, setSelectedMeans] = useState()\n  const [selectedClue, setSelectedClue] = useState()\n  const currentPlayer = players.find((p) => p.id === room.sessionId) || {}\n  let scientist = players.find((p) => p.role === 1)\n  let scientistLabel = scientist ? scientist.name : 'none'\n  let murderer = players.find((p) => p.role === 2)\n\n  useEffect(() => {\n    setSelectedMeans()\n    setSelectedClue()\n  }, [phaseIndex])\n\n  if (scientist === currentPlayer) scientistLabel = `You (${scientist.name})`\n\n  const sendAction = (action, rest = {}) => room.send({ action, ...rest })\n  return (\n    <Flex variant=\"column\" style={{ paddingTop: 50, paddingBottom: 200 }}>\n      <Header phaseIndex={phaseIndex} phaseTimer={phaseTimer} />\n\n      <Flex variant=\"column\">\n        {(phaseIndex === 1 || phaseIndex === 2) && (\n          <Scene player={currentPlayer} scene={scene} sendAction={sendAction} />\n        )}\n\n        <Typography align=\"center\">\n          Forensic Scientist: {scientistLabel}\n        </Typography>\n\n        {(phaseIndex === 2 ||\n          phaseIndex === -1 ||\n          (phaseIndex === 0 && currentPlayer.role === 2) ||\n          (phaseIndex === 1 && currentPlayer.role !== 1)) && (\n          <Seats\n            showSetScientistButton={currentPlayer.isAdmin && phaseIndex === -1}\n            sendAction={sendAction}\n            currentPlayer={currentPlayer}\n            selectedMeans={selectedMeans}\n            selectedClue={selectedClue}\n            phaseIndex={phaseIndex}\n            setSelectedMeans={(s) =>\n              setSelectedMeans((o) => (o === s ? null : s))\n            }\n            setSelectedClue={(s) =>\n              setSelectedClue((o) => (o === s ? null : s))\n            }\n            players={players\n              .map((p, index) => ({\n                ...p,\n                index,\n                isClient: p.id === room.sessionId,\n              }))\n              .filter((p) => p.role !== 1)}\n          />\n        )}\n      </Flex>\n\n      <Actions\n        room={room}\n        players={players}\n        crime={crime}\n        phaseIndex={phaseIndex}\n        selectedMeans={selectedMeans}\n        selectedClue={selectedClue}\n      />\n    </Flex>\n  )\n}\n\nconst Header = ({ phaseIndex, phaseTimer }) => (\n  <Flex\n    flex={0}\n    variant=\"row justify-between\"\n    style={{\n      padding: 10,\n      borderBottom: '1px solid gray',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white',\n    }}\n  >\n    <span style={{ minWidth: 50 }}>Deception</span>\n    <span style={{ minWidth: 50 }}>{PHASES[phaseIndex + 1]}</span>\n    <span style={{ minWidth: 50 }}>{phaseTimer}</span>\n  </Flex>\n)\n\nconst Scene = (props) => (\n  <Flex variant=\"column justify-between\" style={{ flexWrap: 'wrap' }}>\n    {props.scene\n      .filter((item) => props.player.role === 1 || item.markedValueIndex > -1)\n      .map((item, n) => (\n        <Flex\n          variant=\"column align-center\"\n          key={`scene-${n}`}\n          style={{ margin: 8 }}\n        >\n          <Typography variant=\"h5\" align=\"center\">\n            {item.type}\n          </Typography>\n          <Flex style={{ width: '100%', flexWrap: 'wrap' }}>\n            {item.values.map((value, n) => (\n              <Flex variant=\"center\" key={`scene-${n}`}>\n                <Card\n                  backgroundColor={\n                    item.markedValueIndex === n ? '#D33830' : 'gray'\n                  }\n                  style={{ minWidth: 100 }}\n                  onClick={() =>\n                    props.sendAction('markScene', { type: item.type, value })\n                  }\n                >\n                  {value}\n                </Card>\n              </Flex>\n            ))}\n          </Flex>\n        </Flex>\n      ))}\n  </Flex>\n)\n\nconst Seats = ({ players, ...props }) => (\n  <Flex flex={2} variant=\"column\">\n    {players.map((player, n) => (\n      <Seat key={`seat-${player.index}`} player={player} {...props} />\n    ))}\n  </Flex>\n)\n\nconst PHASES = [\n  'PRE-GAME',\n  'MURDER PHASE',\n  'EVIDENCE PHASE',\n  'PRESENTATION PHASE',\n]\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\nimport { Box, Typography, Button, TextField } from '@material-ui/core'\nimport { Flex } from '.'\nimport faker from 'faker'\nimport truncate from 'lodash/truncate'\n\nconst saveRoom = (room, name) => {\n  localStorage.setItem('name', name)\n  localStorage.setItem(room.id, room.sessionId)\n}\n\nconst joinRoomWithReconnect = async (roomId) => {\n  let room,\n    sessionId = localStorage.getItem(roomId)\n\n  if (sessionId) {\n    try {\n      room = await window.colyseus.reconnect(roomId, sessionId)\n    } catch (e) {}\n  }\n\n  room = room || (await window.colyseus.joinById(roomId))\n\n  return room\n}\n\nconst AUTOCONNECT = true\n\nexport function Lobby({ setRoom }) {\n  const [availableRooms, setAvailableRooms] = useState([])\n  const [name, setName] = useState(\n    localStorage.getItem('name') || faker.name.firstName(),\n  )\n  const intervalRef = useRef()\n  const autoConnectAttempted = useRef(false)\n\n  const createRoom = useCallback(\n    async (name) => {\n      const roomName = prompt('Room name?')\n      if (!roomName) return\n\n      const room = await window.colyseus.create('deception', { roomName })\n      saveRoom(room, name)\n      room.send({ action: 'setName', name })\n      room.send({ action: 'sit' })\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const joinRoom = useCallback(\n    async (roomId, name) => {\n      const room = await joinRoomWithReconnect(roomId)\n      if (!room) {\n        alert('Failed to join room')\n        return\n      }\n      saveRoom(room, name)\n      room.send({ action: 'setName', name })\n      room.send({ action: 'sit' })\n      setRoom(room)\n    },\n    [setRoom],\n  )\n\n  const getAvailableRooms = useCallback(async () => {\n    const rooms = await window.colyseus.getAvailableRooms()\n    setAvailableRooms(rooms)\n  }, [])\n\n  useEffect(() => {\n    getAvailableRooms()\n    intervalRef.current = setInterval(getAvailableRooms, 3000)\n    return () => clearInterval(intervalRef.current)\n  }, [getAvailableRooms])\n\n  useEffect(() => {\n    if (availableRooms) {\n      const lastRoom = availableRooms.find((room) =>\n        localStorage.getItem(room.roomId),\n      )\n\n      if (AUTOCONNECT && lastRoom && !autoConnectAttempted.current) {\n        autoConnectAttempted.current = true\n        joinRoom(lastRoom.roomId, name)\n      }\n    }\n  }, [availableRooms, joinRoom, name])\n\n  return (\n    <Flex variant=\"column center\" style={{ height: '100vh' }}>\n      <TextField\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={(e) =>\n          setName(truncate(e.target.value, { length: 10, omission: '' }))\n        }\n        style={{ marginBottom: 20 }}\n      />\n\n      <Typography variant=\"h5\">Available Tables:</Typography>\n\n      <Flex flex={0} variant=\"column center\" style={{ minHeight: 200 }}>\n        {availableRooms.length === 0 && <EmptyState />}\n\n        {availableRooms.map((room) => (\n          <RoomListItem\n            key={room.roomId}\n            room={room}\n            onClick={() => joinRoom(room.roomId, name)}\n          />\n        ))}\n      </Flex>\n\n      <Button variant=\"contained\" onClick={() => createRoom(name)}>\n        Create room\n      </Button>\n    </Flex>\n  )\n}\n\nconst RoomListItem = ({ room, onClick }) => (\n  <Box>\n    <Typography\n      style={{ cursor: 'pointer', textDecoration: 'underline' }}\n      onClick={onClick}\n    >\n      {room.metadata.roomName || room.roomId}\n    </Typography>\n  </Box>\n)\n\nconst EmptyState = () => <Typography>No rooms available</Typography>\n","import React, { useState, useEffect } from 'react'\nimport { Room } from './components/Room'\nimport { Lobby } from './components/Lobby'\nimport { Flex } from './components'\n\nfunction App() {\n  const [room, setRoom] = useState()\n  const [players, setPlayers] = useState([])\n  const [phaseIndex, setPhaseIndex] = useState(-1)\n  const [roundsLeft, setRoundsLeft] = useState(2)\n  const [phaseTimer, setPhaseTimer] = useState(-1)\n  const [scene, setScene] = useState([])\n  const [crime, setCrime] = useState([])\n\n  useEffect(() => {\n    if (!room) return\n\n    room.onLeave(() => {\n      setRoom(null)\n      setPlayers([])\n      setPhaseIndex(-1)\n      setRoundsLeft(2)\n      setScene([])\n    })\n\n    room.state.onChange = (changes) =>\n      changes.forEach(({ field, value }) => {\n        if (field === 'players') {\n          setPlayers(value.toJSON())\n        } else if (field === 'activeScene') {\n          setScene(value.toJSON())\n        } else if (field === 'activeCrime') {\n          setCrime(value.toJSON())\n        } else if (field === 'phaseIndex') {\n          setPhaseIndex(value)\n        } else if (field === 'roundsLeft') {\n          setRoundsLeft(value)\n        } else if (field === 'phaseTimer') {\n          setPhaseTimer(value)\n        } else if (field === 'message') {\n          value && alert(value)\n        }\n      })\n  }, [room])\n\n  console.log({ players, scene, phaseIndex, phaseTimer, crime })\n\n  return (\n    <Flex variant=\"column\">\n      {room ? (\n        <Room\n          room={room}\n          players={players}\n          scene={scene.slice(0, scene.length - roundsLeft)}\n          phaseTimer={phaseTimer}\n          phaseIndex={phaseIndex}\n          crime={crime}\n        />\n      ) : (\n        <Lobby setRoom={setRoom} />\n      )}\n    </Flex>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Client } from 'colyseus.js'\n\nwindow.colyseus = new Client(\n  process.env.NODE_ENV === 'production'\n    ? 'wss://daniel-deception.herokuapp.com'\n    : 'ws://localhost:3553',\n)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}